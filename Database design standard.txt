Database design standard
Skip to end of metadata
Created by Do Duc Thinh 13 minutes agoGo to start of metadata
https://www.databasestar.com/database-table-naming-conventions/

https://tqdev.com/2021-should-table-names-be-singular-or-plural



Database object naming convention
Use English language for table/column names
Table name is singular, not plural (PRODUCT, USER, not PRODUCTS, USERS). Multiple words is linked by underscore character ( _ ), e.g. ORDER_PAYMENT
Column name is singular, separated by underscore character ( _ ), e.g. FULL_NAME
Use full words instead of abbreviation for names: ACCOUNT_BALANCE instead of ACC_BAL. Do not save some words but makes it hard to guess later on. Names should be less than 30 characters.
Each table MUST have comment to explain meaning of the table
Each column MUST have comment to explain meaning of the column
Comment follows double dashes, on the same line as Table Name and Column name in the create/alter table statement
Every strong data table should have only 1 column serving as a primary key (named ID), even in case we have natural primary key. (Strong/weak entity definition: https://www.geeksforgeeks.org/difference-between-strong-and-weak-entity/
Every table should have columns to identified created/update time: CREATED_AT DEFAULT CURRENT_TIMESTAMP & UPDATED_AT DEFAULT CURRENT_TIMESTAMP.
Column that have DEFAULT VALUE must have NOT NULL constraint.
Column with timezone and timestamp data written into table columns should match DB Timezone. Recommend to convert to UTC+7 before storing on database.


Sample

CREATE TABLE SUPPLIER ( -- Supplier information
ID NUMBER, -- Primary key, generated by application
SUPPLIER_CODE VARCHAR2(255), -- Supplier code, uniquely in this table SUPPLIER_NAME VARCHAR2(1000), -- Supplier name
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Record created time
UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Record update time);



Table & index guidelines
Tables that will have greater than 1M rows (forecast) should be partitioned by a time/date column. The partitioned column should be the one appear in most queries to filter data (WHERE). This is to improve application performance & enable us to archive old data later on effectively.
Partition column name is documented in table design so that DBA can create table structure correctly.
Columns that frequently appear in filter conditions & have “high number” of distinct values should have index on. “High number” is relative to number of rows in the table, eg. 1.000 or 100.000
In some cases, column that have low number of distinct values but still need index e.g.:
CREATE TABLE ORDER
(ID number,
CUSTOMER_ID number,
TOTAL_VALUE number,
….
STATUS number
…)
STATUS

Meaning

0

NOT PROCESSED

1

REJECT

2

PROCESSED

…


Most queries will have this filter: SELECT * FROM ORDER WHERE STATUS = 0: find orders that are not processed, so we still need index on STATUS because number of rows that have STATUS=0 is small compare to total number of rows.

Index in general improve queries response time but slowdown DML (INSERT, UPDATE, DELETE). Too many indexes also tend to create sub optimal execution plans. In many cases, full scan table is faster than index scan, therefore, do not create too many indexes if it does not have positive impact, such as index on very low distinct values (e.g. GENDER, CUSTOMER_TYPE…)
Column that have index is also documented in table design