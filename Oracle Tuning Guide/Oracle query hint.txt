1. Driving site
------------------------------------------------------------------------------------------------
Chọn site để thực hiện câu lệnh query khi dùng DBlink

Bên nào to hơn thì chọn site bên đấy

select /*+DRIVING_SITE(h)*/
   ename
from
  tiny_table        t,
  huge_table@remote h
where
   t.deptno = h.deptno;

   
   
Answer:  In a true distributed query, the optimization is done on the sending site.  Because your local site may not have access to the CBO statistics on the remote site, Oracle "punts" and does a full-table scan, and this is likely the cause of your full scan.

The driving_site hint forces query execution to be done at a different site than the initiating instance. This is done when the remote table is much larger than the local table and you want the work (join, sorting) done remotely to save the back-and-forth network traffic.

For example, we use the driving_site hint to force the "work" to be done on the site where the huge table resides:

select /*+DRIVING_SITE(h)*/
   ename
from
  tiny_table        t,
  huge_table@remote h
where
   t.deptno = h.deptno;
   
   
   
2. Hint using index 
------------------------------------------------------------------------------------------------
SELECT /*+ INDEX(LM(GUID)) */ COUNT(1) INTO v_IsExists 
FROM LOG_MASTER LM 
WHERE (LM.GUID) = (p_Guid) and CREATED_DATE > sysdate - 1;
       




3. Hint using order join
------------------------------------------------------------------------------------------------
SELECT /*+ leading(rtt, os, binfo, stoxplus_martket) */

Chọn site để thực hiện câu lệnh query khi dùng DBlink

Bên nào to hơn thì chọn site bên đấy

select /*+DRIVING_SITE(h)*/
   ename
from
  tiny_table        t,
  huge_table@remote h
where
   t.deptno = h.deptno;

   
   
Answer:  In a true distributed query, the optimization is done on the sending site.  Because your local site may not have access to the CBO statistics on the remote site, Oracle "punts" and does a full-table scan, and this is likely the cause of your full scan.

The driving_site hint forces query execution to be done at a different site than the initiating instance. This is done when the remote table is much larger than the local table and you want the work (join, sorting) done remotely to save the back-and-forth network traffic.

For example, we use the driving_site hint to force the "work" to be done on the site where the huge table resides:

select /*+DRIVING_SITE(h)*/
   ename
from
  tiny_table        t,
  huge_table@remote h
where
   t.deptno = h.deptno;
   
   
   
4. RESULT_CACHE: lấy từ result cache ra sử dụng luôn nên rất nhanh (có thể lấy của session khác)
------------------------------------------------------------------------------------------------
select /*+ RESULT_CACHE*/ count(*) from emp;

