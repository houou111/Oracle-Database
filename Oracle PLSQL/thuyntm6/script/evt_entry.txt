ALTER TABLE MOBR5.EVT_ENTRY
 DROP PRIMARY KEY CASCADE;

DROP TABLE MOBR5.EVT_ENTRY CASCADE CONSTRAINTS;

CREATE TABLE MOBR5.EVT_ENTRY
(
  ID                       NUMBER(18)           NOT NULL,
  EVENT                    VARCHAR2(100 BYTE),
  DELAY                    NUMBER(10),
  CREATED_DATE             TIMESTAMP(6),
  TRIGGER_DATE             TIMESTAMP(6),
  SCHEDULED_ID             NUMBER(18),
  DAT_CREATION             TIMESTAMP(6),
  ID_CUSTOMER_CREATION     NUMBER(18),
  DAT_LAST_UPDATE          TIMESTAMP(6),
  ID_CUSTOMER_LAST_UPDATE  NUMBER(18)
)
TABLESPACE USERS
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN MOBR5.EVT_ENTRY.ID IS 'Auto-generated PK';

COMMENT ON COLUMN MOBR5.EVT_ENTRY.EVENT IS 'Name of the event - links produced events to handler';

COMMENT ON COLUMN MOBR5.EVT_ENTRY.DELAY IS 'Optional delay (in seconds) when event should trigger';

COMMENT ON COLUMN MOBR5.EVT_ENTRY.CREATED_DATE IS 'The Date/Time the event was created';

COMMENT ON COLUMN MOBR5.EVT_ENTRY.TRIGGER_DATE IS 'The Date/Time the event will become due for processing';

COMMENT ON COLUMN MOBR5.EVT_ENTRY.SCHEDULED_ID IS 'FK to scheduled event from which this event was created';



CREATE UNIQUE INDEX MOBR5.EVT_ENTRY_PK2 ON MOBR5.EVT_ENTRY
(ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;

ALTER INDEX MOBR5.EVT_ENTRY_PK2
  MONITORING USAGE;


CREATE INDEX MOBR5.IDX_ENTRY_CREATED2 ON MOBR5.EVT_ENTRY
(EVENT, CREATED_DATE)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;

ALTER INDEX MOBR5.IDX_ENTRY_CREATED2
  MONITORING USAGE;


CREATE INDEX MOBR5.IDX_ENTRY_TRIGGER2 ON MOBR5.EVT_ENTRY
(EVENT, TRIGGER_DATE)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER MOBR5.EVT_ENTRY_TRG2 before insert ON MOBR5.EVT_ENTRY
for each row
begin     if inserting then       if :NEW."ID" is null then          select SEQ_EVENT.nextval into :NEW."ID" from dual;       end if;    end if; end;
/


ALTER TABLE MOBR5.EVT_ENTRY ADD (
  CONSTRAINT EVT_ENTRY_PK2
  PRIMARY KEY
  (ID)
  USING INDEX MOBR5.EVT_ENTRY_PK2
  ENABLE VALIDATE);

ALTER TABLE MOBR5.EVT_ENTRY ADD (
  CONSTRAINT EVT_ENTRY_EVT_SCHEDULED_FK 
  FOREIGN KEY (SCHEDULED_ID) 
  REFERENCES MOBR5.EVT_SCHEDULED (ID)
  ENABLE VALIDATE);

GRANT SELECT ON MOBR5.EVT_ENTRY TO TCB_MBB_APO;

GRANT SELECT ON MOBR5.EVT_ENTRY TO TCB_MBB_DEVL3;
