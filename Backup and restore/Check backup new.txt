set lines 200 
set pages 200 
col cf for 9,999 
col df for 9,999 
col elapsed_seconds heading "ELAPSED|SECONDS" 
col i0 for 9,999 
col i1 for 9,999 
col l for 9,999 
col output_GB for 9,999,999 heading "OUTPUT|GB" 
col session_recid for 999999 heading "SESSION|RECID" 
col session_stamp for 99999999999 heading "SESSION|STAMP" 
col start_time for a20 
col end_time for a20 
col status for a25
col DAY for a10 
col time_taken_display for a10 heading "TIME|TAKEN" 
col output_instance for 9999 heading "OUT|INST" 
select 
  j.session_recid, j.session_stamp, 
  to_char(j.start_time, 'yyyy-mm-dd hh24:mi:ss') start_time, 
  to_char(j.end_time, 'yyyy-mm-dd hh24:mi:ss') end_time, 
  (j.output_bytes/1024/1024/1024) output_GB, j.status, j.input_type, 
  decode(to_char(j.start_time, 'd'), 1, 'Sunday', 2, 'Monday', 
                                     3, 'Tuesday', 4, 'Wednesday', 
                                     5, 'Thursday', 6, 'Friday', 
                                     7, 'Saturday') DAY, 
  j.elapsed_seconds, j.time_taken_display 
from V$RMAN_BACKUP_JOB_DETAILS j 
  left outer join (select 
                     d.session_recid, d.session_stamp, 
                     sum(case when d.controlfile_included = 'YES' then d.pieces else 0 end) CF, 
                     sum(case when d.controlfile_included = 'NO' 
                               and d.backup_type||d.incremental_level = 'D' then d.pieces else 0 end) DF, 
                     sum(case when d.backup_type||d.incremental_level = 'D0' then d.pieces else 0 end) I0, 
                     sum(case when d.backup_type||d.incremental_level = 'I1' then d.pieces else 0 end) I1, 
                     sum(case when d.backup_type = 'L' then d.pieces else 0 end) L 
                   from 
                     V$BACKUP_SET_DETAILS d 
                     join V$BACKUP_SET s on s.set_stamp = d.set_stamp and s.set_count = d.set_count 
                   where s.input_file_scan_only = 'NO' 
                   group by d.session_recid, d.session_stamp) x 
    on x.session_recid = j.session_recid and x.session_stamp = j.session_stamp 
  left outer join (select o.session_recid, o.session_stamp, min(inst_id) inst_id 
                   from GV$RMAN_OUTPUT o 
                   group by o.session_recid, o.session_stamp) 
    ro on ro.session_recid = j.session_recid and ro.session_stamp = j.session_stamp 
where j.start_time > trunc(sysdate)-&NUMBER_OF_DAYS 
order by j.start_time; 


SELECT DISTINCT p.tag, r.object_type, r.session_recid, r.start_time,
 r.end_time, 
 round(((r.end_time - r.start_time)* 24),2) "ET(Hr)",
 round((r.output_bytes/1048576/1024),2) "SIZE (GB)",
 r.status,
 r.output_device_type,
 round((input_bytes_per_sec/1048576),2) "read (MB/sec)",
 round((output_bytes_per_sec / 1048576),2) "output (MB/sec)"
FROM
 v$backup_piece p,
 v$rman_status r,
 v$rman_backup_job_details d
WHERE
 p.rman_status_recid = r.recid
 AND p.rman_status_stamp = r.stamp
 AND r.status LIKE '%COMPLETED%'
 AND r.operation LIKE '%BACKUP%'
 AND r.object_type LIKE 'DB%'
 AND d.session_recid = r.session_recid
 AND trunc(p.completion_time) > SYSDATE - 14;