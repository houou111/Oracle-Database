SET ECHO OFF
SET VERIFY OFF
SET TRIMSPOOL ON
SET TRIMOUT ON
SET LINESIZE 9999
SET PAGESIZE 9999
SET FEEDBACK OFF
SET TIMING OFF
SET TIME OFF
COLUMN NAME FORMAT A50

COLUMN DBSIZE HEADING 'DATABASE SIZE [GB]'
COLUMN CTIME HEADING 'DATE'

COLUMN NAME HEADING 'ASM NAME'
COLUMN START_TIME HEADING 'START TIME'
COLUMN TOTAL_MB HEADING 'TOTAL [GB]'
COLUMN USED_MB HEADING 'USED [GB]'
COLUMN FREE_MB HEADING 'FREE [GB]'
COLUMN USED_PERCENT HEADING '% USED'
COLUMN CF FORMAT 9,999
COLUMN DF FORMAT 9,999
COLUMN I0 FORMAT 9,999
COLUMN I1 FORMAT 9,999
COLUMN L FORMAT 9,999
COLUMN OUTPUT_GB FORMAT 9,999,999 HEADING "OUTPUT|GB"
COLUMN STATUS FORMAT A10 TRUNC
COLUMN FLASHBACK_ON HEADING 'FLASHBACK ENABLE'
SPOOL ./db_info.html

SELECT ROUND(SUM(BYTES)/1024/1024/1024,2) DBSIZE FROM V$DATAFILE_HEADER;

SELECT /*+ RULE */ 
  	TO_CHAR(J.START_TIME, 'HH24:MM:SS DD-MM-YYYY') "START TIME",
	OUTPUT_DEVICE_TYPE "DEVICE TYPE",
  ROUND(J.INPUT_BYTES/1024/1024/1024,3) "INPUT(GB)",
  ROUND(J.OUTPUT_BYTES/1024/1024/1024,3) "OUTPUT(GB)", 
  J.STATUS "STATUS",
  DECODE(TO_CHAR(J.START_TIME, 'D'), 1, 'SUNDAY', 2, 'MONDAY',
                                     3, 'TUESDAY', 4, 'WEDNESDAY',
                                     5, 'THURSDAY', 6, 'FRIDAY',
                                     7, 'SATURDAY') DAY,
  DECODE(X.DF,0,'',X.DF) "Database full (pieces)",
  DECODE(X.I0,0,'',X.I0) "Level 0 (pieces)", 
  DECODE(X.I1,0,'',X.I1) "Level 1 (pieces)", 
  DECODE(X.L,0,'',X.L) "Archivelog (pieces)"
FROM V$RMAN_BACKUP_JOB_DETAILS J
	,(SELECT /*+ RULE */ 
                     D.SESSION_RECID, D.SESSION_STAMP,
                     DECODE(SUM(CASE WHEN D.CONTROLFILE_INCLUDED = 'YES' THEN D.PIECES ELSE 0 END),0,'','ControlFile') CF,
                     SUM(CASE WHEN D.CONTROLFILE_INCLUDED = 'NO' AND D.BACKUP_TYPE||D.INCREMENTAL_LEVEL = 'D' THEN D.PIECES ELSE 0 END) DF,
                     SUM(CASE WHEN D.BACKUP_TYPE||D.INCREMENTAL_LEVEL = 'D0' THEN D.PIECES ELSE 0 END) I0,
                     SUM(CASE WHEN D.BACKUP_TYPE||D.INCREMENTAL_LEVEL = 'I1' THEN D.PIECES ELSE 0 END) I1,
                     SUM(CASE WHEN D.BACKUP_TYPE = 'L' THEN D.PIECES ELSE 0 END) L
                   FROM
                     V$BACKUP_SET_DETAILS D
                     JOIN V$BACKUP_SET S ON S.SET_STAMP = D.SET_STAMP AND S.SET_COUNT = D.SET_COUNT
                   WHERE S.INPUT_FILE_SCAN_ONLY = 'NO'
                   GROUP BY D.SESSION_RECID, D.SESSION_STAMP) X
    , (SELECT /*+ RULE */ O.SESSION_RECID,O.SESSION_STAMP, MIN(INST_ID) INST_ID
                   FROM GV$RMAN_OUTPUT O
                   GROUP BY O.SESSION_RECID, O.SESSION_STAMP) RO
WHERE X.SESSION_RECID(+) = J.SESSION_RECID AND X.SESSION_STAMP(+) = J.SESSION_STAMP
	and RO.SESSION_RECID(+) = J.SESSION_RECID AND RO.SESSION_STAMP(+) = J.SESSION_STAMP
	and J.START_TIME > TRUNC(SYSDATE)-30 --(X.DF!=0 or X.I0!=0 or X.I1!=0)
ORDER BY J.START_TIME;

--instance state
select a.name "DATABASE NAME",
		b.instance_name "INSTANCE NAME",
		a.db_unique_name "DB UNIQUE NAME",
		a.database_role "DATABASE ROLE",
		a.open_mode "OPEN MODE"  
		from gv$database a,gv$instance b where a.inst_id=b.inst_id;
--ASM
SELECT NAME ,ROUND(TOTAL_MB/1024,2) TOTAL_MB,
        ROUND((TOTAL_MB-FREE_MB)/1024,2) USED_MB,
        ROUND(FREE_MB/1024,2) FREE_MB,
        ROUND((TOTAL_MB-FREE_MB)/TOTAL_MB*100) USED_PERCENT
FROM V$ASM_DISKGROUP;

--ARCHIVE LOG
ARCHIVE LOG LIST;

--FLASHBACK
SELECT FLASHBACK_ON FROM V$DATABASE;
SHOW PARAMETER DB_RECOVERY_FILE_DEST;
SELECT NAME, SPACE_LIMIT, SPACE_USED, SPACE_USED/SPACE_LIMIT*100 "PERCENT USED", NUMBER_OF_FILES FROM V$RECOVERY_FILE_DEST;
--DBA ROLE
SELECT * FROM DBA_ROLE_PRIVS WHERE GRANTED_ROLE = 'DBA';
--Profiles
SELECT * FROM DBA_PROFILES 
WHERE LIMIT!='DEFAULT'
   ORDER BY PROFILE;
--Reclaimable index   
select tablespace_name,segment_owner,segment_name,segment_type,partition_name,round(allocated_space/1024/1024) allocated_mb,round(used_space/1024/1024) used_mb,round(reclaimable_space/1024/1024) reclaimable_mb,recommendations 
from table(dbms_space.asa_recommendations('FALSE', 'FALSE', 'FALSE'))
where segment_type like 'INDEX%' order by reclaimable_mb desc;
spool off
exit
